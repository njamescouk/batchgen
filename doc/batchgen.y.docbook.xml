<programlisting>
<anchor id="batch_file"/><emphasis>batch_file:</emphasis>
<link linkend="statement_list">statement_list</link> 
;

<anchor id="statement"/><emphasis>statement:</emphasis>
  dos_command 
| <link linkend="compound_statement">compound_statement</link> 
| <link linkend="selection_statement">selection_statement</link> 
| <link linkend="while_statement">while_statement</link> 
| <link linkend="labelled_statement">labelled_statement</link> 
| <link linkend="jump_statement">jump_statement</link> 
| <link linkend="function_definition">function_definition</link> 
| <link linkend="function_call">function_call</link> 
| 
;

<anchor id="function_definition"/><emphasis>function_definition:</emphasis>
FDEF identifier '(' ')' <link linkend="compound_statement">compound_statement</link> 
;

<anchor id="function_call"/><emphasis>function_call:</emphasis>
<link linkend="function_identifier">function_identifier</link> '(' ')' 
;

<anchor id="labelled_statement"/><emphasis>labelled_statement:</emphasis>
  CASE <link linkend="primary_expression">primary_expression</link> ':' <link linkend="statement">statement</link> 
| DEFAULT ':' <link linkend="statement">statement</link> 
;

<anchor id="compound_statement"/><emphasis>compound_statement:</emphasis>
  '{' <link linkend="statement_list">statement_list</link> '}' 
| '{' '}' 
;

<anchor id="statement_list"/><emphasis>statement_list:</emphasis>
  <link linkend="statement">statement</link> 
| <link linkend="statement_list">statement_list</link> <link linkend="statement">statement</link> 
;

<anchor id="selection_statement"/><emphasis>selection_statement:</emphasis>
  IF '(' <link linkend="dos_expression">dos_expression</link> ')' <link linkend="statement">statement</link> 
| IF '(' <link linkend="dos_expression">dos_expression</link> ')' <link linkend="statement">statement</link> ELSE <link linkend="statement">statement</link> 
| SWITCH '(' <link linkend="primary_expression">primary_expression</link> ')' <link linkend="statement">statement</link> 
;

<anchor id="while_statement"/><emphasis>while_statement:</emphasis>
WHILE '(' <link linkend="dos_expression">dos_expression</link> ')' <link linkend="statement">statement</link> 
;

<anchor id="jump_statement"/><emphasis>jump_statement:</emphasis>
  BREAK ';' 
| RETURN ';' 
| RETURN <link linkend="primary_expression">primary_expression</link> ';' 
;

<anchor id="dos_expression"/><emphasis>dos_expression:</emphasis>
  <link linkend="logical_AND_expression">logical_AND_expression</link> 
| <link linkend="dos_expression">dos_expression</link> LOG_OR <link linkend="logical_AND_expression">logical_AND_expression</link> 
;

<anchor id="logical_AND_expression"/><emphasis>logical_AND_expression:</emphasis>
  <link linkend="unary_expression">unary_expression</link> 
| <link linkend="logical_AND_expression">logical_AND_expression</link> LOG_AND <link linkend="unary_expression">unary_expression</link> 
;

<anchor id="unary_expression"/><emphasis>unary_expression:</emphasis>
  <link linkend="dos_logical_expression">dos_logical_expression</link> 
| '(' <link linkend="dos_expression">dos_expression</link> ')' 
| '!' <link linkend="unary_expression">unary_expression</link> 
;

<anchor id="dos_logical_expression"/><emphasis>dos_logical_expression:</emphasis>
  ERRORLEVEL GE <link linkend="primary_expression">primary_expression</link> 
| ERRORLEVEL &lt; <link linkend="primary_expression">primary_expression</link> 
| ERRORLEVEL EQ <link linkend="primary_expression">primary_expression</link> 
| ERRORLEVEL NE <link linkend="primary_expression">primary_expression</link> 
| EXIST <link linkend="primary_expression">primary_expression</link> 
| <link linkend="primary_expression">primary_expression</link> EQ <link linkend="primary_expression">primary_expression</link> 
| <link linkend="primary_expression">primary_expression</link> NE <link linkend="primary_expression">primary_expression</link> 
;

<anchor id="primary_expression"/><emphasis>primary_expression:</emphasis>
  identifier 
| <link linkend="primary_expression">primary_expression</link> identifier 
| en_var 
| <link linkend="primary_expression">primary_expression</link> en_var 
| param 
| <link linkend="primary_expression">primary_expression</link> param 
| number 
| <link linkend="primary_expression">primary_expression</link> number 
| empty 
;

<anchor id="function_identifier"/><emphasis>function_identifier:</emphasis>
func_id 
;

</programlisting>

